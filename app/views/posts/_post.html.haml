.post{:id => "#{post.id}"}
  .divider
  .section
    .row
      .col.s12.m6
        .card
          .card-content
            .card-title
              = post_owner(post)
              .elapsed.right= time_ago_in_words post.created_at
            .content.center
              %br/
              .flow-text= simple_format post.content
          .card-action
            = link_to 'Delete', post, method: :delete, data: { confirm: 'Are you sure you want to remove this post?' }, remote: true if post.user == current_user
            .like-form
              - unless post.likers.include? current_user
                = render 'likes/like', post: post
              - else
                = render 'likes/unlike', post: post
                = render 'likes/like_this.js', post: post # OPTIMIZE transfer JS code to assets/javascripts/users/show.js
      .col.s12.m6
        .posted-comments
          - unless post.comments.empty?
            = render post.comments.sort
        .comment-form
          = form_for @comment, url: post_comments_path(post), remote: true do |f|
            .input-field
              <textarea class="materialize-textarea" id="comment_body" name="comment[body]" placeholder="Write a comment..."></textarea>
            .commentbutton
              = f.button 'Comment', class: 'btn waves-effect waves-light'
            .comment-error-messages
